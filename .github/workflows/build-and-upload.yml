name: CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'  # trigger workflow on version number tag push
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Module
        shell: powershell
        run: |
          Get-Content .\Copy-MTPFiles.ps1 | Add-Content -Path Copy-MTPFiles.psm1
          Get-Content .\Copy-MTPFilesFunctions.ps1 | Add-Content -Path Copy-MTPFiles.psm1
          
          Update-ModuleManifest -Path .\Copy-MTPFiles.psd1 -ModuleVersion (Get-Date -Format 'yyMM.dd.HH.mm')
          
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Copy-MTPFiles
          path: |
            Copy-MTPFiles.psm1
            Copy-MTPFiles.psd1
            MTPFileFormat.ps1xml

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Copy-MTPFiles
          path: ./
        if: startsWith(github.ref, 'refs/tags/')

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true   # promote a build to a release via the GitHub UI
          prerelease: ${{ contains(github.ref, '-pre') }}
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Copy-MTPFiles.zip
          asset_name: Copy-MTPFiles.zip
          asset_content_type: application/zip
        if: startsWith(github.ref, 'refs/tags/')
